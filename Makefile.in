SHELL=/usr/bin/env sh

GIT_HASH=$(shell git rev-parse HEAD)

DOCKER_NAMESPACE="{{DOCKER_NAMESPACE}}"
DOCKER_IMAGE_TAG="{{DOCKER_TARGET_TAG}}"

DOCKER_IMAGE_NAME=alpine-base

DOCKER_IMAGE=$(DOCKER_NAMESPACE)/$(DOCKER_IMAGE_NAME):$(GIT_HASH)
TARGET_IMAGE=$(DOCKER_NAMESPACE)/$(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_TAG)
all: build

push:
	docker push $(TARGET_IMAGE)

tag: image

test:
	@echo "Test busybox exists and is executable"
	docker run -it --rm $(DOCKER_IMAGE) 'test -x /bin/busybox'
	@echo "Test that apk is working"
	docker run -it --rm $(DOCKER_IMAGE) "/sbin/apk update"
	@echo "Test suid su is not working"
	docker run -it --rm $(DOCKER_IMAGE) "/bin/su -c whoami" && false || true

build: image
image: prepare
	docker build --no-cache --force-rm -t $(DOCKER_IMAGE) .
	docker tag $(DOCKER_IMAGE) $(TARGET_IMAGE)

prepare: alpine-base.tar.xz

alpine-base.tar.xz:
	$(SHELL) prepare.sh

clean:
	rm -f alpine-base.tar.xz

dist-clean: clean
	rm -f Makefile
	rm -f Dockerfile
	docker rmi -f $(TARGET_IMAGE) || true

.PHONY: clean prepare image push tag test all
